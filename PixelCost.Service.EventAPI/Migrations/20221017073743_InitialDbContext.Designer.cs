// <auto-generated />
using System;
using Microsoft.EntityFrameworkCore;
using Microsoft.EntityFrameworkCore.Infrastructure;
using Microsoft.EntityFrameworkCore.Metadata;
using Microsoft.EntityFrameworkCore.Migrations;
using Microsoft.EntityFrameworkCore.Storage.ValueConversion;
using PixelCost.Service.EventAPI.Database;

#nullable disable

namespace PixelCost.Service.EventAPI.Migrations
{
    [DbContext(typeof(ApplicationDbContext))]
    [Migration("20221017073743_InitialDbContext")]
    partial class InitialDbContext
    {
        protected override void BuildTargetModel(ModelBuilder modelBuilder)
        {
#pragma warning disable 612, 618
            modelBuilder
                .HasAnnotation("ProductVersion", "6.0.10")
                .HasAnnotation("Relational:MaxIdentifierLength", 128);

            SqlServerModelBuilderExtensions.UseIdentityColumns(modelBuilder, 1L, 1);

            modelBuilder.Entity("PixelCost.Service.EventAPI.Models.Entities.Category", b =>
                {
                    b.Property<long>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("bigint");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<long>("Id"), 1L, 1);

                    b.Property<decimal?>("Balance")
                        .HasColumnType("money");

                    b.Property<decimal>("Cost")
                        .HasColumnType("money");

                    b.Property<decimal?>("Expense")
                        .HasColumnType("money");

                    b.Property<int?>("ExpenseCount")
                        .HasColumnType("int");

                    b.Property<bool?>("IsAchived")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("bit")
                        .HasDefaultValue(true);

                    b.Property<string>("Name")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<long>("SubDurationId")
                        .HasColumnType("bigint");

                    b.HasKey("Id");

                    b.HasIndex("SubDurationId");

                    b.ToTable("Categories", (string)null);
                });

            modelBuilder.Entity("PixelCost.Service.EventAPI.Models.Entities.Revenue", b =>
                {
                    b.Property<long>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("bigint");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<long>("Id"), 1L, 1);

                    b.Property<decimal>("EarningAmount")
                        .HasColumnType("money");

                    b.Property<DateTime>("EarningDate")
                        .HasColumnType("datetime2");

                    b.Property<long>("SubDurationId")
                        .HasColumnType("bigint");

                    b.Property<string>("Task")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("Id");

                    b.HasIndex("SubDurationId");

                    b.ToTable("Revenues", (string)null);
                });

            modelBuilder.Entity("PixelCost.Service.EventAPI.Models.Entities.SubDuration", b =>
                {
                    b.Property<long>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("bigint");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<long>("Id"), 1L, 1);

                    b.Property<decimal?>("Balance")
                        .HasColumnType("money");

                    b.Property<long>("DurationId")
                        .HasColumnType("bigint");

                    b.Property<DateTime>("EndingDate")
                        .HasColumnType("datetime2");

                    b.Property<decimal?>("Expense")
                        .HasColumnType("money");

                    b.Property<int?>("ExpenseCount")
                        .HasColumnType("int");

                    b.Property<decimal>("InitialCost")
                        .HasColumnType("money");

                    b.Property<bool?>("IsAchived")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("bit")
                        .HasDefaultValue(true);

                    b.Property<string>("Name")
                        .IsRequired()
                        .HasMaxLength(32)
                        .HasColumnType("nvarchar(32)");

                    b.Property<float?>("Progress")
                        .HasColumnType("real");

                    b.Property<int?>("RemainingDays")
                        .HasColumnType("int");

                    b.Property<decimal?>("Revenue")
                        .HasColumnType("money");

                    b.Property<int?>("RevenueCount")
                        .HasColumnType("int");

                    b.Property<DateTime>("StartingDate")
                        .HasColumnType("datetime2");

                    b.Property<decimal?>("SumCategoryBalance")
                        .HasColumnType("money");

                    b.Property<decimal?>("SumCategoryCost")
                        .HasColumnType("money");

                    b.Property<decimal?>("TotalCost")
                        .HasColumnType("money");

                    b.Property<int?>("TotalDays")
                        .HasColumnType("int");

                    b.Property<decimal?>("UsableMoney")
                        .HasColumnType("money");

                    b.Property<string>("userId")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("Id");

                    b.ToTable("Events", (string)null);
                });

            modelBuilder.Entity("PixelCost.Service.EventAPI.Models.Entities.Category", b =>
                {
                    b.HasOne("PixelCost.Service.EventAPI.Models.Entities.SubDuration", "SubDuration")
                        .WithMany("Categories")
                        .HasForeignKey("SubDurationId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("SubDuration");
                });

            modelBuilder.Entity("PixelCost.Service.EventAPI.Models.Entities.Revenue", b =>
                {
                    b.HasOne("PixelCost.Service.EventAPI.Models.Entities.SubDuration", "SubDuration")
                        .WithMany("Revenues")
                        .HasForeignKey("SubDurationId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("SubDuration");
                });

            modelBuilder.Entity("PixelCost.Service.EventAPI.Models.Entities.SubDuration", b =>
                {
                    b.Navigation("Categories");

                    b.Navigation("Revenues");
                });
#pragma warning restore 612, 618
        }
    }
}
